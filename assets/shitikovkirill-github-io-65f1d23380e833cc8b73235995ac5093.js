"use strict"
define("shitikovkirill-github-io/adapters/reddit",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.JSONAPIAdapter.extend({host:"https://www.reddit.com",urlForQuery:function(e,t){switch(Ember.Logger.log("query"),Ember.Logger.log(e),Ember.Logger.log("modelName"),Ember.Logger.log(t),t){case"reddit":return this.host+"/r/"+e.subreddit+".json"
default:return this._super.apply(this,arguments)}}})}),define("shitikovkirill-github-io/app",["exports","shitikovkirill-github-io/resolver","ember-load-initializers","shitikovkirill-github-io/config/environment"],function(e,t,i,r){Object.defineProperty(e,"__esModule",{value:!0})
var o=Ember.Application.extend({modulePrefix:r.default.modulePrefix,podModulePrefix:r.default.podModulePrefix,Resolver:t.default});(0,i.default)(o,r.default.modulePrefix),e.default=o}),define("shitikovkirill-github-io/components/pac-man",["exports","ember-keyboard-shortcuts/mixins/component"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Component.extend(t.default,{score:0,levelNumber:1,x:1,y:2,squareSize:40,grid:[[2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[1,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]],directions:{up:{x:0,y:-1},down:{x:0,y:1},left:{x:-1,y:0},right:{x:1,y:0},stopped:{x:0,y:0}},isMoving:!1,direction:"down",intent:"down",ctx:Ember.computed(function(){return document.getElementById("myCanvas").getContext("2d")}),screenWidth:Ember.computed(function(){return this.get("grid.firstObject.length")}),screenHeight:Ember.computed(function(){return this.get("grid.length")}),screenPixelWidth:Ember.computed(function(){return this.get("screenWidth")*this.get("squareSize")}),screenPixelHeight:Ember.computed(function(){return this.get("screenHeight")*this.get("squareSize")}),didInsertElement:function(){this.movementLoop()},drawPac:function(){var e=this.get("x"),t=this.get("y")
this.drawCircle(e,t,2,this.get("direction"))},drawPallet:function(e,t){this.drawCircle(e,t,6,"stopped")},drawWalls:function(e,t){var i=this.get("squareSize"),r=this.get("ctx")
r.fillStyle="#000",r.fillRect(e*i,t*i,i,i)},drawCircle:function(e,t,i,r){var o=this.get("ctx"),n=this.get("squareSize"),l=(e+.5+this.offsetFor("x",r))*n,a=(t+.5+this.offsetFor("y",r))*n
o.fillStyle="#000",o.beginPath(),o.arc(l,a,n/i,0,2*Math.PI,!1),o.closePath(),o.fill()},offsetFor:function(e,t){var i=this.get("frameCycle")/this.get("framesPerMovement")
return this.get("directions."+t+"."+e)*i},drawGrid:function(){var e=this
this.get("grid").forEach(function(t,i){t.forEach(function(t,r){1===t&&e.drawWalls(r,i),2===t&&e.drawPallet(r,i)})})},clearScreen:function(){this.get("ctx").clearRect(0,0,this.get("screenPixelWidth"),this.get("screenPixelHeight"))},changePacDirection:function(){var e=this.get("intent")
Ember.Logger.info("changePacDirection: "+e),this.pathBlockedInDirection(e)?this.set("direction","stopped"):this.set("direction",e)},frameCycle:1,framesPerMovement:30,movementLoop:function(){if(Ember.Logger.info("movementLoop"),this.get("frameCycle")==this.get("framesPerMovement")){var e=this.get("direction")
this.set("x",this.nextCoordinate("x",e)),this.set("y",this.nextCoordinate("y",e)),this.set("frameCycle",1),this.processAnyPellets(),this.changePacDirection()}else"stopped"===this.get("direction")?this.changePacDirection():this.incrementProperty("frameCycle")
this.clearScreen(),this.drawGrid(),this.drawPac(),Ember.run.later(this,this.movementLoop,1e3/60)},nextCoordinate:function(e,t){return this.get(e)+this.get("directions."+t+"."+e)},pathBlockedInDirection:function(e){var t=this.cellTypeInDirection(e)
return Ember.Logger.info("cellTypeInDirection: "+t),Ember.isEmpty(t)||1===t},cellTypeInDirection:function(e){var t=this.nextCoordinate("y",e),i=this.nextCoordinate("x",e)
return this.get("grid."+t+"."+i)},processAnyPellets:function(){var e=this.get("x"),t=this.get("y"),i=this.get("grid")
2===i[t][e]&&(i[t][e]=0,this.incrementProperty("score"),this.levelComplete()&&(this.incrementProperty("levelNumber"),this.restartLevel()))},restartLevel:function(){this.set("x",0),this.set("y",0)
var e=this.get("grid")
e.forEach(function(t,i){t.forEach(function(t,r){0===t&&(e[i][r]=2)})})},levelComplete:function(){var e=!1
return this.get("grid").forEach(function(t){t.forEach(function(t){2===t&&(e=!0)})}),!e},keyboardShortcuts:{up:function(){Ember.Logger.log("up"),this.set("intent","up")},down:function(){Ember.Logger.log("down"),this.set("intent","down")},left:function(){Ember.Logger.log("left"),this.set("intent","left")},right:function(){Ember.Logger.log("right"),this.set("intent","right")}},collidedWithBorder:function(){var e=this.get("x"),t=this.get("y"),i=this.get("screenHeight"),r=this.get("screenWidth")
return e<0||t<0||e>=r||t>=i},collidedWithWall:function(){var e=this.get("x"),t=this.get("y")
return 1===this.get("grid")[t][e]}})}),define("shitikovkirill-github-io/helpers/app-version",["exports","shitikovkirill-github-io/config/environment","ember-cli-app-version/utils/regexp"],function(e,t,i){Object.defineProperty(e,"__esModule",{value:!0}),e.appVersion=o
var r=t.default.APP.version
function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}
return t.hideSha?r.match(i.versionRegExp)[0]:t.hideVersion?r.match(i.shaRegExp)[0]:r}e.default=Ember.Helper.helper(o)}),define("shitikovkirill-github-io/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("shitikovkirill-github-io/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("shitikovkirill-github-io/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","shitikovkirill-github-io/config/environment"],function(e,t,i){Object.defineProperty(e,"__esModule",{value:!0})
var r=void 0,o=void 0
i.default.APP&&(r=i.default.APP.name,o=i.default.APP.version),e.default={name:"App Version",initialize:(0,t.default)(r,o)}}),define("shitikovkirill-github-io/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("shitikovkirill-github-io/initializers/ember-data",["exports","ember-data/setup-container","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("shitikovkirill-github-io/initializers/export-application-global",["exports","shitikovkirill-github-io/config/environment"],function(e,t){function i(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var i
if("undefined"!=typeof window)i=window
else if("undefined"!=typeof global)i=global
else{if("undefined"==typeof self)return
i=self}var r,o=t.default.exportApplicationGlobal
r="string"==typeof o?o:Ember.String.classify(t.default.modulePrefix),i[r]||(i[r]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete i[r]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=i,e.default={name:"export-application-global",initialize:i}}),define("shitikovkirill-github-io/instance-initializers/ember-data",["exports","ember-data/initialize-store-service"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"ember-data",initialize:t.default}}),define("shitikovkirill-github-io/models/reddit",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.Model.extend({title:t.default.attr()})}),define("shitikovkirill-github-io/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("shitikovkirill-github-io/router",["exports","shitikovkirill-github-io/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var i=Ember.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL})
i.map(function(){this.route("reddit",{path:"reddit/:subreddit"}),this.route("pacman")}),e.default=i}),define("shitikovkirill-github-io/routes/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({})}),define("shitikovkirill-github-io/routes/pacman",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({})}),define("shitikovkirill-github-io/routes/reddit",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({model:function(e){return Ember.Logger.log(e),this.get("store").query("reddit",e)}})}),define("shitikovkirill-github-io/serializers/reddit",["exports","ember-data"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default.JSONAPISerializer.extend({normalizeResponse:function(e,t,i,r,o){return Ember.Logger.log("store"),Ember.Logger.log(e),Ember.Logger.log("primaryModelClass"),Ember.Logger.log(t),Ember.Logger.log("payload"),Ember.Logger.log(i),Ember.Logger.log("id"),Ember.Logger.log(r),Ember.Logger.log("requestType"),Ember.Logger.log(o),{data:i.data.children.map(function(e){return{id:e.data.id,type:"reddit",attributes:e.data}})}}})}),define("shitikovkirill-github-io/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("shitikovkirill-github-io/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"3KUYyIbo",block:'{"symbols":[],"statements":[[4,"link-to",["pacman"],null,{"statements":[[0,"Pacman"]],"parameters":[]},null],[0,"\\n"],[4,"link-to",["reddit","pics"],null,{"statements":[[0,"Reddit"]],"parameters":[]},null],[0,"\\n"],[1,[18,"outlet"],false]],"hasEval":false}',meta:{moduleName:"shitikovkirill-github-io/templates/application.hbs"}})}),define("shitikovkirill-github-io/templates/components/pac-man",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"Cf7qOIiW",block:'{"symbols":[],"statements":[[6,"p"],[7],[0,"Score: "],[1,[18,"score"],false],[0," Level: "],[1,[18,"levelNumber"],false],[8],[0,"\\n"],[6,"canvas"],[9,"id","myCanvas"],[10,"width",[18,"screenPixelWidth"],null],[10,"height",[18,"screenPixelHeight"],null],[7],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"shitikovkirill-github-io/templates/components/pac-man.hbs"}})}),define("shitikovkirill-github-io/templates/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"xM3wVETP",block:'{"symbols":[],"statements":[[1,[18,"outlet"],false]],"hasEval":false}',meta:{moduleName:"shitikovkirill-github-io/templates/index.hbs"}})}),define("shitikovkirill-github-io/templates/pacman",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"q7ug5QqV",block:'{"symbols":[],"statements":[[6,"h1"],[7],[0,"Pacman"],[8],[0,"\\n"],[1,[18,"outlet"],false],[0,"\\n"],[1,[18,"pac-man"],false]],"hasEval":false}',meta:{moduleName:"shitikovkirill-github-io/templates/pacman.hbs"}})}),define("shitikovkirill-github-io/templates/reddit",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"qeyasSSc",block:'{"symbols":["reddit"],"statements":[[6,"h1"],[7],[0,"Reddit"],[8],[0,"\\n"],[1,[18,"outlet"],false],[0,"\\n"],[6,"ul"],[7],[0,"\\n"],[4,"each",[[20,["model"]]],null,{"statements":[[0,"    "],[6,"li"],[7],[1,[19,1,["title"]],false],[8],[0,"\\n"]],"parameters":[1]},null],[8],[0,"\\n"]],"hasEval":false}',meta:{moduleName:"shitikovkirill-github-io/templates/reddit.hbs"}})}),define("shitikovkirill-github-io/config/environment",[],function(){try{var e="shitikovkirill-github-io/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),i={default:JSON.parse(unescape(t))}
return Object.defineProperty(i,"__esModule",{value:!0}),i}catch(t){throw new Error('Could not read config from meta tag with name "'+e+'".')}}),runningTests||require("shitikovkirill-github-io/app").default.create({name:"shitikovkirill-github-io",version:"0.0.0+8635e7a3"})
